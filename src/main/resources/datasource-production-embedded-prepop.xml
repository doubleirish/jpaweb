<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">


    <!--in real production world this would be a JNDI reference
     for a datasource defined in the container e.g tomcat's server.xml -->
    <bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource">
        <constructor-arg>
            <bean   class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver"/>
                <property name="url" value="jdbc:derby:tempDb;create=true"/>
                <property name="username"  value="app"/>
                <property name="password" value="app"/>
            </bean>
        </constructor-arg>
    </bean>




    <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:sql/drop_book.sql" />
        <jdbc:script location="classpath:sql/create_book.sql" />
        <jdbc:script location="classpath:sql/insert_book.sql" />
    </jdbc:initialize-database>

</beans>